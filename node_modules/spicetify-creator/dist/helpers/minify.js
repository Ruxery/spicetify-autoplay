"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.minifyCSS = exports.minifyJS = exports.minifyFolder = void 0;
const glob_1 = __importDefault(require("glob"));
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("fs"));
const uglify_js_1 = __importDefault(require("uglify-js"));
const clean_css_1 = __importDefault(require("clean-css"));
const cleanCSS = new clean_css_1.default();
const minifyJS = async (code) => {
    return await uglify_js_1.default.minify(code).code;
};
exports.minifyJS = minifyJS;
const minifyCSS = async (code) => {
    return cleanCSS.minify(code).styles;
};
exports.minifyCSS = minifyCSS;
const minifyFolder = async (directory) => {
    const jsFiles = await glob_1.default.sync(path_1.default.join(directory, "/*(*.js)"), { absolute: true });
    for (const jsFile of jsFiles) {
        fs_1.default.writeFileSync(jsFile, await minifyJS(fs_1.default.readFileSync(jsFile).toString()));
    }
    const cssFiles = await glob_1.default.sync(path_1.default.join(directory, "/*(*.css)"), { absolute: true });
    for (const cssFile of cssFiles) {
        fs_1.default.writeFileSync(cssFile, await minifyCSS(fs_1.default.readFileSync(cssFile).toString()));
    }
};
exports.minifyFolder = minifyFolder;
